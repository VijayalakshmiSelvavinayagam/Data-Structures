/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int rem = 0;
        int b = 0;
        int sum = 0;
        ListNode n1 = l1;
        ListNode n2 = l2;
        ListNode res = null;
        ListNode prev = null;
        while(n1 != null && n2 != null)
        {
            sum = rem + n1.val + n2.val;
            n1.val = sum%10;
            rem = sum/10;
            prev = n1;
            n1 = n1.next;
            n2 = n2.next;
        }
        System.out.println(rem);
        while(n1 != null && n2 == null)
        {
            sum = rem+n1.val;
            n1.val = sum%10;
            rem = sum/10;
            prev = n1;
            n1 = n1.next;
        }
        while(n2 != null && n1 == null)
        {
            sum = rem+n2.val;
            ListNode newnode = new ListNode(sum%10);
            prev.next = newnode;
            rem = sum/10;
            prev = prev.next;
            n2 = n2.next;
        }
        while(rem>0)
        {
            ListNode newnode = new ListNode(rem%10);
            rem = rem/10;
            prev.next = newnode; 
            prev = prev.next;
        }
        return l1;
    }
}
