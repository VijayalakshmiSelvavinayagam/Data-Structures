/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        ListNode l1 = list1;
        ListNode l2 = list2;
        ListNode l2tail = null;
        
        while(l2 != null)
        {
            l2tail = l2;
            l2 = l2.next;
        }

        // Link endnode of link to b+1
        while(l1 != null)
        {
            if(l1.val == b+1)
            {
                l2tail.next = l1;
            } 
            l1 = l1.next;
        }
        
        // Link start node of list2 to a-1
        l1 = list1;
        while(l1 != null)
        {
            if(l1.val == a-1)
            {
                l1.next = list2;
            }                
            l1 = l1.next;
        }
        return list1;
    }
}
