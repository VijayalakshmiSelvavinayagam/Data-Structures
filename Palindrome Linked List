/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode next = null;
        ListNode prev = null;
        ListNode secondhead = null;
        ListNode cur = null;
        ListNode fast = head;
        ListNode slow = head;
        
        if(head == null)
            return true;
        
        if(head.next == null)
            return true;
        
        while(fast.next != null && fast.next.next != null)
        {
            fast = fast.next.next;
            slow = slow.next;
        }
        secondhead = slow.next;
        slow.next = null;
        cur = secondhead;
        while(cur != null)
        {
            next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        secondhead = prev;
        ListNode p1 = head;
        ListNode p2 = secondhead;
        
        while(p1 != null && p2 != null)
        {
            if(p1.val != p2.val)
                return false;
            p1 = p1.next;
            p2 = p2.next;
        }
        return true;
    }
}
