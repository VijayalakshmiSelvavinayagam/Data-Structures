/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode n1 = head;
	    ListNode n2 = head;
        if(n1.next==null && n==1)
        {
            head = null;
            return head;
        }
	    for(int i=0; i<n; i++)
            n1=n1.next;
        if(n1!=null)
        {
        while(n1.next!=null)
        {
            n1= n1.next;
            n2=n2.next;
        }
        n2.next=n2.next.next;
        }
        if(n1 == null && n2==head)
        {
            head=head.next;
        }
	    return head;
    }
}
